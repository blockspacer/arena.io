option optimize_for = SPEED;

import "ProtoFiles/common.proto";
import "ProtoFiles/profile.proto";

package proto_game;

/* DATA TYPES */

enum MobScriptType
{ 
  SimpleShooterMobScript = 1;
  SimpleBossScript = 2;
}

enum GameMode
{
  FFA = 1;
  TeamDeathmatch = 2;
  CaptureTheFlag = 3;
}

enum Weapons
{
  MachineGun = 1;
  DualMachineGun = 2;
  Canon = 3;
  MobGun = 4;
}

enum Pickups
{
  SmallGoldCoin = 1;
  InvisibilityPickup = 2;
  RegenerationPickup = 3;
  QuadDamagePickup = 4;
  HugeBulletsPickUp = 5;
  HeavyAmmo = 6;
}

enum Bullets
{
  //Player Bullets
  Common = 1;
  CanonCore = 2;
  
  //Mob Bullets
  MonSlowBullet = 3;
  
  //Boss Bullets
  SimpleBossProjectile1 = 4;
  SimpleBoosProjectile2 = 5;
  SimpleBoosProjectile3 = 6;
}

enum MobType
{
  Basic = 1;
  SimpleBoss = 2;
}

enum PowerUpType
{
  DoubleDamage = 0;
  Invisibility = 1;
  WiderView = 2;
  Regeneration = 3;
}

enum BoosterType
{
  RefillHeavyAmmo = 1;
  RestoreFullHealth = 2;
  HealFollower = 3;
  AttackFollower = 4;
  TrueSight = 5;
}

enum Stats
{
  MaxHealth = 1;
  HealthRegen = 2;
  BulletDamage = 3;
  SkillDamage = 4;
  MovementSpeed = 5;
  ReloadSpeed = 6;
  Armor = 7;
  BulletSpeed = 8;
  
  SkillCooldown = 9;
  BulletSize = 10;
}

enum Skills
{
  BigCannon = 1;
}

message StatValue
{
  required Stats stat = 1;
  required float value = 2;
  required float step = 3;
}

enum ExpBlocks
{
  Small = 0;
  Medium = 1;
  Big = 2;
  Huge = 3;
  GoldBlock = 4;
}

message Vector 
{
  required float x = 1;
  required float y = 2;
}

/* REQUESTS */

message DamageApply
{
  message Request
  {
    required int32 bullet = 1;
    required int32 attacker = 2;
    required float damage = 3;
    required int32 target = 4;
    
    extend proto_common.Request 
		{
			optional proto_game.DamageApply.Request dmg_apply_req = 2017;
		}
  }
}

message Ping 
{
  message Request 
	{
    required int64 timestamp = 1;
    required int32 current_ping = 2;
    
    extend proto_common.Request 
		{
			optional proto_game.Ping.Request ping_req = 12;
		}
  }
  
  message Response 
  {
    required int64 timestamp = 1;
    
    extend proto_common.Response 
		{
			optional proto_game.Ping.Response ping_req = 12;
		}
  }
}

message PlayerInput
{
  //TODO make bool fields as 1 int with flags
  message Request
  {
    required float force_x = 1; // direction x [0..1]
    required float force_y = 2; // direction y [0..1]
    required float rotation = 3;
    required int32 tick = 4;
    optional bool shoot = 5;
    optional bool skill = 6;
   
    extend proto_common.Request 
    {
      optional proto_game.PlayerInput.Request plr_input_req = 2016;
    }
  }
  
  message Response
  {
    required float x = 1; // position x
    required float y = 2; // position y
    required float force_x = 3; 
    required float force_y = 4;
    required int32 tick = 5;
    required bool shoot = 6;
    required bool skill = 7;
    
    extend proto_common.Response 
		{
			optional proto_game.PlayerInput.Response plr_input_res = 2016;
		}
  }
}

message FindGame
{
  message Request 
  {
    required GameMode game_mode = 1;
    
    extend proto_common.Request
    {
      optional proto_game.FindGame.Request fnd_room_req = 2013;
    }
  }
  
  message Response 
  {
    required string game_server_ip = 1;
    
    extend proto_common.Response
    {
      optional proto_game.FindGame.Response fnd_room_res = 2013;
    }
  }
}

message JoinServer
{
  message Request 
  {
    required string login_token = 1;
    
    extend proto_common.Request
    {
      optional proto_game.JoinServer.Request join_srv_req = 2019;
    }
  }
  
  message Response 
  {
    extend proto_common.Response
    {
      optional proto_game.JoinServer.Response join_srv_res = 2019;
    }
  }
}

message JoinGame
{
  message Request
  {
    required string game_id = 1;
  
    extend proto_common.Request
    {
      optional proto_game.JoinGame.Request join_game_req = 2011;
    }
  }
  
  message Response
  {
    required int32 map_id = 1;
  
    extend proto_common.Response
    {
      optional proto_game.JoinGame.Response join_game_res = 2011;
    }
  }
}

/*
  Polyline representation
*/
message Contour
{
  repeated float x = 1;
  repeated float y = 2;
}

message Map
{
  required Contour border = 1; // outside border of game world
  repeated Contour obstacles = 2; 
}

message DownloadMap
{
  message Request
  {
    extend proto_common.Request
    {
      optional proto_game.DownloadMap.Request download_map_req = 2018;
    }
  }
  
  message Response
  {
    required Map map = 1;
    
    extend proto_common.Response
    {
      optional proto_game.DownloadMap.Response download_map_res = 2018;
    }
  }
}
/*
  Currently deprecated
*/
message StatUpgrade
{
  message Request
  {
    required Stats stat = 1;
  
    extend proto_common.Request 
    {
      optional proto_game.StatUpgrade.Request plr_stat_upg_req = 2014;
    }
  }
  
  message Response 
  {
    extend proto_common.Response 
    {
      optional proto_game.StatUpgrade.Response plr_stat_upg_res = 2014;
    }
  }
}
/*
  Currently deprecated
*/
message PlayerUpgrade
{
  required int32 guid = 1;
  
  extend proto_common.Request 
	{
	  optional proto_game.PlayerUpgrade plr_upg_req = 2010;
	}
  
  extend proto_common.Event 
	{
	  optional proto_game.PlayerUpgrade plr_upg_evt = 2010;
	}
}

message SyncTick
{
  message Request
  {
    extend proto_common.Request
    {
      optional proto_game.SyncTick.Request sync_tick_req = 2015;
    }
  }
  
  message Response
  {
    required int32 tick = 1;
  
    extend proto_common.Response
    {
      optional proto_game.SyncTick.Response sync_tick_res = 2015;
    }
  }
}

/*  ====================================== EVENTS ====================================== */ 

message BulletAppeared
{
  required int32 tick = 1;
  required float x = 2;
  required float y = 3;
  required float speed = 4;
  required float direction = 5;
}

message MobAppeared
{
  required MobType type = 1;
  required float x = 2;
  required float y = 3;
  required int32 id = 4;
  repeated StatValue stats = 5;
  required float hp = 6;
  required float attack_range = 7;
  required Weapons weapon_used = 8;
  
  extend proto_common.Event
  {
    optional proto_game.MobAppeared mob_apd_evt = 2020;
  }
}

message PowerUpAppeared
{
  required PowerUpType type = 1;
  required float x = 2;
  required float y = 3;
  required int32 id = 4;
  required int32 lifetime = 5;
  
  extend proto_common.Event
  {
    optional proto_game.PowerUpAppeared pwrup_app_evt = 2016;
  }
}

message PowerUpGrabbed
{
  required int32 id = 1;
  required int32 who_grabbed = 2;
  
  extend proto_common.Event
  {
    optional proto_game.PowerUpGrabbed pwrup_grb_evt = 2017;
  }
}

message StartGame
{
    required int32 tick = 1;
    required int32 time_left = 2;
    
    extend proto_common.Event
    {
      optional proto_game.StartGame start_game_evt = 2024;
    }
}

message BlockAppeared
{
	required int32 guid = 1;
  required Vector position = 2;
  required float hp = 3;
  required ExpBlocks type = 4;
  required float max_hp = 5;

	extend proto_common.Event 
	{
	  optional proto_game.BlockAppeared block_appeared_evt = 2001;
	}
}

message EntityRemoved
{
  required int32 guid = 1;
  
  extend proto_common.Event 
  {
    optional proto_game.EntityRemoved entity_removed_evt = 2003;
  }
}

message BulletsRemoved
{
  repeated int32 guid = 1;
  
  extend proto_common.Event 
  {
    optional proto_game.BulletsRemoved bullet_removed_evt = 2021;
  }
}

message SpawnPickUp
{
  required float x = 1;
  required float y = 2;
  required Pickups type = 3;
  required int32 guid = 4;
  
  extend proto_common.Event 
  {
    optional proto_game.SpawnPickUp pick_up_evt = 2018;
  }
}

message UnitState
{
  required int32 guid = 1;
  required float x = 2;
  required float y = 3;
  required float rotation = 5;
}

message UnitStatesUpdate
{
  repeated UnitState states = 1;
  required int32 tick = 2;
  required int64 timestamp = 3;
  
  extend proto_common.Event 
	{
	  optional proto_game.UnitStatesUpdate states_upd_evt = 2004;
	}
}

message LeaveGame
{
  extend proto_common.Request 
	{
	  optional proto_game.LeaveGame leave_req = 2009;
	}
  
  extend proto_common.Response 
	{
	  optional proto_game.LeaveGame leave_res = 2009;
	}
}

message PlayerExperience
{
  required int32 exp = 1;
  
  extend proto_common.Event 
	{
	  optional proto_game.PlayerExperience plr_exp_evt = 2012;
	}
}

message PlayerLevelUp
{
  required int32 lvl = 1;
  required int32 expLeft = 2;
  
  extend proto_common.Event 
	{
	  optional proto_game.PlayerLevelUp plr_lvl_up_evt = 2013;
	}
}

message PlayerCoinsChange
{
  required int32 coins = 1;
  
  extend proto_common.Event
  {
    optional proto_game.PlayerCoinsChange plr_coins_evt = 2007;
  }
}

message PlayerStatusChange
{
  required int32 guid = 1;
  optional float hp = 2;
  
  extend proto_common.Event 
	{
	  optional proto_game.PlayerStatusChange plr_status_evt = 2011;
	}
}

message SyncAttack
{
  required int32 sync_id = 1;
  required int32 first_bullet_id = 2;
  
  extend proto_common.Event
  {
    optional proto_game.SyncAttack sync_att_evt = 2022;
  }
}

message SpawnBullets
{
  required float direction = 1;
  required float angleStep = 2;
  required int32 startId = 3;
  required float damage = 4;
  required int32 count = 5;
  required float x = 6;
  required float y = 7;
  required int32 owner = 8; 
  required Bullets type = 9;
  required int32 tick = 10;
  
  extend proto_common.Event 
	{
	  optional proto_game.SpawnBullets spwn_proj_evt = 2023;
	}
}

message UnitAttack
{
  required int32 guid = 1;
  required float direction = 2;
  required float x = 3;
  required float y = 4;
  required int32 time_advance = 5;
  required int32 first_bullet_id = 6;
  required int32 tick = 7;
  
  extend proto_common.Event 
	{
	  optional proto_game.UnitAttack unit_att_evt = 2006;
	}
}

message PlayerAppeared
{
	required string name = 1;
  required Vector position = 2;
  required int32 guid = 3;
  repeated StatValue stats = 4;
  required float hp = 5;
  required bool local = 6;
  required proto_profile.PlayerClasses class = 7;
  required int32 level = 8;
  required Skills skill = 9;

	extend proto_common.Event 
	{
	  optional proto_game.PlayerAppeared player_appeared_evt = 2005;
	}
}

message ScoreChanged
{
  required int32 guid = 1;
  required int32 score = 2;
  
  extend proto_common.Event
  {
    optional proto_game.ScoreChanged plr_score_evt = 2014; 
  }
}

message GameFinished
{
  required int32 exp = 1;
  required int32 coins = 2;
  
  extend proto_common.Event
  {
    optional proto_game.GameFinished game_finished_evt = 2015;
  }
}

message DamageDone
{
  required int32 target = 1;
  required float hp_left = 2;
  
  extend proto_common.Event
  {
    optional proto_game.DamageDone dmg_done_evt = 2008; 
  }
}

message SkillCasted
{
  required int32 guid = 1;
  required float direction = 2;
  required float x = 3;
  required float y = 4;
  required int32 tick = 5;
  required int32 first_bullet_id = 6;
  
  extend proto_common.Event
  {
    optional proto_game.SkillCasted skill_cast_evt = 2019; 
  }
}